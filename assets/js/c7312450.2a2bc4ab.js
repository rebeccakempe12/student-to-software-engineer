"use strict";(self.webpackChunkstudent_to_software_engineer=self.webpackChunkstudent_to_software_engineer||[]).push([[7588],{4677:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"technical-skill-roadmap/programming-fundementals/debugging","title":"5.1.3. Debugging","description":"Errors and bugs are an unavoidable part of programming \u2014 and often one of the most frustrating. No matter how experienced you become, you will always encounter code that doesn\'t work the way you expected.","source":"@site/docs/5-technical-skill-roadmap/1-programming-fundementals/3-debugging.md","sourceDirName":"5-technical-skill-roadmap/1-programming-fundementals","slug":"/technical-skill-roadmap/programming-fundementals/debugging","permalink":"/docs/technical-skill-roadmap/programming-fundementals/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/5-technical-skill-roadmap/1-programming-fundementals/3-debugging.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"5.1.2. The Terminal","permalink":"/docs/technical-skill-roadmap/programming-fundementals/the-terminal"},"next":{"title":"5.1.4. Data Structures","permalink":"/docs/technical-skill-roadmap/programming-fundementals/data-structures"}}');var o=n(4848),t=n(8453);const i={},a="5.1.3. Debugging",l={},d=[{value:"Types of Errors",id:"types-of-errors",level:2},{value:"Syntax Errors",id:"syntax-errors",level:3},{value:"Runtime Errors",id:"runtime-errors",level:3},{value:"Logic Errors",id:"logic-errors",level:3},{value:"Debugging Tools",id:"debugging-tools",level:2},{value:"Tips for Debugging",id:"tips-for-debugging",level:3},{value:"Knowledge Checklist",id:"knowledge-checklist",level:2}];function c(e){const r={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"513-debugging",children:"5.1.3. Debugging"})}),"\n",(0,o.jsx)(r.p,{children:"Errors and bugs are an unavoidable part of programming \u2014 and often one of the most frustrating. No matter how experienced you become, you will always encounter code that doesn't work the way you expected."}),"\n",(0,o.jsxs)(r.p,{children:["But here's the good news: debugging is a skill. It's not about knowing all the answers, but about knowing how to ",(0,o.jsx)(r.em,{children:"find"})," the answers. With practice, you\u2019ll get better at spotting mistakes, narrowing down causes, and fixing problems efficiently."]}),"\n",(0,o.jsx)(r.h2,{id:"types-of-errors",children:"Types of Errors"}),"\n",(0,o.jsx)(r.p,{children:"There are three major categories of programming errors:"}),"\n",(0,o.jsx)(r.h3,{id:"syntax-errors",children:"Syntax Errors"}),"\n",(0,o.jsx)(r.p,{children:"Syntax errors happen when your code breaks the rules of the language."}),"\n",(0,o.jsx)(r.p,{children:"Example:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:'  print("Hello"\n'})}),"\n",(0,o.jsx)(r.p,{children:"This is missing a closing parenthesis and will produce a syntax error."}),"\n",(0,o.jsx)(r.h3,{id:"runtime-errors",children:"Runtime Errors"}),"\n",(0,o.jsxs)(r.p,{children:["Runtime errors occur ",(0,o.jsx)(r.em,{children:"while"})," the program is running, usually when something unexpected happens."]}),"\n",(0,o.jsx)(r.p,{children:"Example:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:"result = 10 / 0\n"})}),"\n",(0,o.jsx)(r.p,{children:"Dividing by zero causes a runtime crash."}),"\n",(0,o.jsx)(r.h3,{id:"logic-errors",children:"Logic Errors"}),"\n",(0,o.jsx)(r.p,{children:'Logic errors or "human error" are mistakes in the program\'s logic. The program runs, but it doesn\u2019t do what you intended.'}),"\n",(0,o.jsx)(r.p,{children:"Example:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:"def is_even(n):\n    return n % 2 == 1  # Oops! This actually checks for odd numbers\n"})}),"\n",(0,o.jsxs)(r.p,{children:["At this stage, you should be able to identify and correct simple logic errors in code you\u2019ve written. That means reading through your program carefully and comparing what it ",(0,o.jsx)(r.em,{children:"does"})," to what you ",(0,o.jsx)(r.em,{children:"intended"}),"."]}),"\n",(0,o.jsx)(r.h2,{id:"debugging-tools",children:"Debugging Tools"}),"\n",(0,o.jsx)(r.p,{children:"As your programs grow more complex, it becomes harder to trace problems just by reading your code. That\u2019s where debugging tools come in."}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Print statements"})," are your simplest tool. Insert them to track the flow of your program or the value of a variable."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Breakpoints"})," let you pause your program at a certain line and inspect what\u2019s happening."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Stepping through code"})," helps you run your program one line at a time to watch its behavior."]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"Most code editors and IDEs (like VS Code, PyCharm, or Replit) have built-in debuggers you can explore. Learning to use these tools early will save you hours of frustration later."}),"\n",(0,o.jsx)(r.h3,{id:"tips-for-debugging",children:"Tips for Debugging"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Read the full error message \u2014 your stack trace will often point you to the exact line where the problem occurred."}),"\n",(0,o.jsx)(r.li,{children:"Try to isolate the problem \u2014 comment out parts of your code and narrow down the issue."}),"\n",(0,o.jsx)(r.li,{children:"Don\u2019t be afraid to Google error messages \u2014 most errors have been asked (and answered) online."}),"\n",(0,o.jsx)(r.li,{children:"Talk through the problem \u2014 explaining your code out loud, even to yourself, often helps you spot mistakes."}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"knowledge-checklist",children:"Knowledge Checklist"}),"\n",(0,o.jsxs)(r.ul,{className:"contains-task-list",children:["\n",(0,o.jsxs)(r.li,{className:"task-list-item",children:[(0,o.jsx)(r.input,{type:"checkbox",disabled:!0})," ","I understand the difference between syntax, runtime, and logic errors."]}),"\n",(0,o.jsxs)(r.li,{className:"task-list-item",children:[(0,o.jsx)(r.input,{type:"checkbox",disabled:!0})," ","I can solve simple logic errors in my own code."]}),"\n",(0,o.jsxs)(r.li,{className:"task-list-item",children:[(0,o.jsx)(r.input,{type:"checkbox",disabled:!0})," ","I use print statements to help track down bugs."]}),"\n",(0,o.jsxs)(r.li,{className:"task-list-item",children:[(0,o.jsx)(r.input,{type:"checkbox",disabled:!0})," ","I know how to use breakpoints or a debugger in my editor."]}),"\n",(0,o.jsxs)(r.li,{className:"task-list-item",children:[(0,o.jsx)(r.input,{type:"checkbox",disabled:!0})," ","I know how to search for error messages and find solutions."]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var s=n(6540);const o={},t=s.createContext(o);function i(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);