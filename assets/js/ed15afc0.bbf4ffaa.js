"use strict";(self.webpackChunkstudent_to_software_engineer=self.webpackChunkstudent_to_software_engineer||[]).push([[2846],{4266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"technical-skill-roadmap/production-ready-applications/code-review-etiquette","title":"5.3.12. Code Review Etiquette","description":"Doing code reviews is a critical part of the software development process. It\u2019s not just about finding bugs\u2014it\u2019s about improving code quality, sharing knowledge, and building a better product together.","source":"@site/docs/5-technical-skill-roadmap/3-production-ready-applications/12-code-review-etiquette.md","sourceDirName":"5-technical-skill-roadmap/3-production-ready-applications","slug":"/technical-skill-roadmap/production-ready-applications/code-review-etiquette","permalink":"/docs/technical-skill-roadmap/production-ready-applications/code-review-etiquette","draft":false,"unlisted":false,"editUrl":"https://github.com/student-to-software-engineer/student-to-software-engineer/edit/master/docs/5-technical-skill-roadmap/3-production-ready-applications/12-code-review-etiquette.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"5.3.11. Common Security Vulnerabilities","permalink":"/docs/technical-skill-roadmap/production-ready-applications/security-best-practicies"},"next":{"title":"5.3.13. Architectures","permalink":"/docs/technical-skill-roadmap/production-ready-applications/architecture"}}');var i=t(4848),r=t(8453);const o={},c="5.3.12. Code Review Etiquette",d={},l=[{value:"Common Pitfalls in Code Reviews",id:"common-pitfalls-in-code-reviews",level:2},{value:"Before and After: Comment Examples",id:"before-and-after-comment-examples",level:2},{value:"Examples of Labeled Comments",id:"examples-of-labeled-comments",level:2},{value:"Standard Labels",id:"standard-labels",level:2},{value:"Optional Decorations",id:"optional-decorations",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"5312-code-review-etiquette",children:"5.3.12. Code Review Etiquette"})}),"\n",(0,i.jsx)(n.p,{children:"Doing code reviews is a critical part of the software development process. It\u2019s not just about finding bugs\u2014it\u2019s about improving code quality, sharing knowledge, and building a better product together."}),"\n",(0,i.jsxs)(n.p,{children:["One of the best resources to learn how to give (and receive) better feedback is ",(0,i.jsxs)(n.a,{href:"https://conventionalcomments.org/",children:[(0,i.jsx)(n.strong,{children:"Conventional Comments"})," by Paul Slaughter"]}),". It outlines a set of simple, structured guidelines for making your review comments easier to understand, act on, and appreciate."]}),"\n",(0,i.jsx)(n.h2,{id:"common-pitfalls-in-code-reviews",children:"Common Pitfalls in Code Reviews"}),"\n",(0,i.jsx)(n.p,{children:"Here are a few common problems that Conventional Comments aims to solve:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lack of Clarity"}),": Vague or ambiguous comments can lead to confusion."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No Clear Action"}),": Highlighting an issue without offering a path forward can be frustrating."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unclear Expectations"}),": It\u2019s often hard to tell whether a comment is a casual suggestion or a required change."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["By using ",(0,i.jsx)(n.strong,{children:"labels and decorations"}),", Conventional Comments encourages comments that are explicit, respectful, and easy to respond to."]}),"\n",(0,i.jsx)(n.h2,{id:"before-and-after-comment-examples",children:"Before and After: Comment Examples"}),"\n",(0,i.jsx)(n.p,{children:"Here\u2019s how a vague comment becomes more helpful with Conventional Comments:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u274c Unclear Comment:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"This is not worded correctly.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u2705 Improved Comment with Labels:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"suggestion: This is not worded correctly.\n\nCan we change this to match the wording used on the marketing page?\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u2705 With More Context:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"issue (non-blocking): This is not worded correctly.\n\nCan we align this with the voice and tone used on the homepage? This helps keep our language consistent across the product.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Labels make your ",(0,i.jsx)(n.strong,{children:"intent"})," clear. They also encourage better discussions and reduce misunderstandings."]}),"\n",(0,i.jsx)(n.h2,{id:"examples-of-labeled-comments",children:"Examples of Labeled Comments"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"suggestion: Let\u2019s avoid using this specific function\u2026\n\nIf we reference too much of a function marked \u201cDeprecated\u201d, it\u2019s likely to break or conflict with newer code soon.\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"issue (ux, non-blocking): These buttons should be red, but let\u2019s handle this in a follow-up task.\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"question (non-blocking): At this point, does it matter which thread has won?\n\nMaybe we should keep looping until all threads have finished?\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"praise: Great use of the caching pattern here. This will definitely speed up the response time!\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"chore: Don\u2019t forget to run the CI pipeline before merging.\n\nYou can use `yarn ci:run` or just push an empty commit to trigger it.\n"})}),"\n",(0,i.jsx)(n.h2,{id:"standard-labels",children:"Standard Labels"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Label"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"praise:"})}),(0,i.jsx)(n.td,{children:"Highlight something done well"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"nitpick:"})}),(0,i.jsx)(n.td,{children:"Trivial, non-blocking preferences (e.g., formatting, naming)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"suggestion:"})}),(0,i.jsx)(n.td,{children:"Propose an improvement, ideally with reasoning or example"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"issue:"})}),(0,i.jsx)(n.td,{children:"Highlight something that is incorrect or could cause bugs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"todo:"})}),(0,i.jsx)(n.td,{children:"Small, necessary changes that still need to be made"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"question:"})}),(0,i.jsx)(n.td,{children:"Ask for clarification or express uncertainty"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"thought:"})}),(0,i.jsx)(n.td,{children:"Share a non-blocking idea or insight"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"chore:"})}),(0,i.jsx)(n.td,{children:"Required process-related steps (e.g. CI, documentation)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"note:"})}),(0,i.jsx)(n.td,{children:"Non-blocking context or callouts the author should be aware of"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"optional-decorations",children:"Optional Decorations"}),"\n",(0,i.jsxs)(n.p,{children:["Decorations help clarify the ",(0,i.jsx)(n.strong,{children:"importance"})," or ",(0,i.jsx)(n.strong,{children:"context"})," of a comment."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Decoration"}),(0,i.jsx)(n.th,{children:"Meaning"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(non-blocking)"})}),(0,i.jsxs)(n.td,{children:["This does ",(0,i.jsx)(n.strong,{children:"not"})," need to be fixed before merging"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(blocking)"})}),(0,i.jsxs)(n.td,{children:["This ",(0,i.jsx)(n.strong,{children:"must"})," be addressed before merging"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(security)"})}),(0,i.jsx)(n.td,{children:"The comment relates to a security concern"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(test)"})}),(0,i.jsx)(n.td,{children:"The comment concerns test coverage or behavior"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(ux)"})}),(0,i.jsx)(n.td,{children:"The comment affects user experience"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(if-minor)"})}),(0,i.jsx)(n.td,{children:"The fix is optional unless it\u2019s trivial to apply"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);