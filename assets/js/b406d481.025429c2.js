"use strict";(self.webpackChunkstudent_to_software_engineer=self.webpackChunkstudent_to_software_engineer||[]).push([[2158],{5747:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"technical-skill-roadmap/production-ready-applications/architecture","title":"5.3.13. Architectures","description":"As your software projects grow, you\u2019ll need to make big-picture decisions about how your code is structured, how different parts communicate, and how your app will scale over time.","source":"@site/docs/5-technical-skill-roadmap/3-production-ready-applications/13-architecture.md","sourceDirName":"5-technical-skill-roadmap/3-production-ready-applications","slug":"/technical-skill-roadmap/production-ready-applications/architecture","permalink":"/docs/technical-skill-roadmap/production-ready-applications/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/student-to-software-engineer/student-to-software-engineer/edit/master/docs/5-technical-skill-roadmap/3-production-ready-applications/13-architecture.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"5.3.12. Code Review Etiquette","permalink":"/docs/technical-skill-roadmap/production-ready-applications/code-review-etiquette"},"next":{"title":"6. Gain Experience Without a Job","permalink":"/docs/gaining-experience-without-formal-employment/"}}');var s=r(4848),t=r(8453);const o={},c="5.3.13. Architectures",l={},a=[{value:"Monolithic Architecture",id:"monolithic-architecture",level:2},{value:"Microservices Architecture",id:"microservices-architecture",level:2},{value:"Event-Driven Architecture",id:"event-driven-architecture",level:2},{value:"Serverless Architecture",id:"serverless-architecture",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"5313-architectures",children:"5.3.13. Architectures"})}),"\n",(0,s.jsx)(n.p,{children:"As your software projects grow, you\u2019ll need to make big-picture decisions about how your code is structured, how different parts communicate, and how your app will scale over time."}),"\n",(0,s.jsx)(n.p,{children:"Software architecture is the high-level blueprint for how a system is organized. It affects everything\u2014how your team works, how easily you can add features, and how well your app performs under load."}),"\n",(0,s.jsx)(n.p,{children:"There\u2019s no one-size-fits-all approach. Below are four common architectural styles you\u2019ll see in the real world."}),"\n",(0,s.jsx)(n.h2,{id:"monolithic-architecture",children:"Monolithic Architecture"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.strong,{children:"monolith"})," is a single, unified codebase that contains your entire application: frontend, backend, business logic, and database access\u2014everything in one deployable unit."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Simple to get started"}),"\n",(0,s.jsx)(n.li,{children:"Easy to test and deploy"}),"\n",(0,s.jsx)(n.li,{children:"Great for small teams and early-stage products"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Can grow into a tangled mess (\u201cspaghetti code\u201d) as the codebase scales"}),"\n",(0,s.jsx)(n.li,{children:"Harder to update parts independently"}),"\n",(0,s.jsx)(n.li,{children:"One bug can bring down the whole app"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use this when:"})," You\u2019re building an MVP, small project, or early version of your product. Monoliths are not \u201cbad\u201d\u2014they\u2019re just best suited for simpler systems."]}),"\n",(0,s.jsx)(n.h2,{id:"microservices-architecture",children:"Microservices Architecture"}),"\n",(0,s.jsxs)(n.p,{children:["In a ",(0,s.jsx)(n.strong,{children:"microservices"})," architecture, your application is split into many small, independent services. Each service is responsible for a specific business capability and communicates with others over the network (often using REST or gRPC APIs)."]}),"\n",(0,s.jsx)(n.p,{children:"Example: A social media app might have separate services for user accounts, notifications, messaging, and file storage."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Teams can work on services independently"}),"\n",(0,s.jsx)(n.li,{children:"Easier to scale parts of the system individually"}),"\n",(0,s.jsx)(n.li,{children:"Failures are isolated to smaller areas"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"More complex infrastructure and deployment"}),"\n",(0,s.jsx)(n.li,{children:"Debugging and testing can be harder"}),"\n",(0,s.jsx)(n.li,{children:"Network latency and failures are real issues"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use this when:"})," You have a growing engineering team and a complex product that needs to scale independently in different areas."]}),"\n",(0,s.jsx)(n.h2,{id:"event-driven-architecture",children:"Event-Driven Architecture"}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.strong,{children:"event-driven"})," architecture is built around the idea that parts of your system can ",(0,s.jsx)(n.strong,{children:"react to events"})," instead of calling each other directly."]}),"\n",(0,s.jsxs)(n.p,{children:["Services communicate by ",(0,s.jsx)(n.strong,{children:"publishing"})," and ",(0,s.jsx)(n.strong,{children:"subscribing"})," to events using a message broker (like Kafka, RabbitMQ, or SNS/SQS)."]}),"\n",(0,s.jsx)(n.p,{children:"Example: When a user uploads a photo:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"An \u201cimage_uploaded\u201d event is published."}),"\n",(0,s.jsx)(n.li,{children:"A background service resizes the image."}),"\n",(0,s.jsx)(n.li,{children:"Another service logs the upload."}),"\n",(0,s.jsx)(n.li,{children:"Yet another service sends a notification."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Highly decoupled and flexible"}),"\n",(0,s.jsx)(n.li,{children:"Good for asynchronous, real-time systems"}),"\n",(0,s.jsx)(n.li,{children:"Easy to add new behaviors by listening to existing events"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Harder to trace what\u2019s happening (requires observability tools)"}),"\n",(0,s.jsx)(n.li,{children:"Failure handling and retries can get tricky"}),"\n",(0,s.jsx)(n.li,{children:"Order of events isn\u2019t always guaranteed"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"serverless-architecture",children:"Serverless Architecture"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Serverless"})," doesn\u2019t mean \u201cno servers\u201d\u2014it means you don\u2019t manage them."]}),"\n",(0,s.jsxs)(n.p,{children:["Instead of running your own app server 24/7, you write ",(0,s.jsx)(n.strong,{children:"functions"})," that run in response to specific triggers (e.g. HTTP requests, cron jobs, file uploads). These functions are deployed to cloud platforms like AWS Lambda, Google Cloud Functions, or Vercel."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You only pay for what you use (great for low-traffic apps)"}),"\n",(0,s.jsx)(n.li,{children:"Automatically scales with demand"}),"\n",(0,s.jsx)(n.li,{children:"No server maintenance"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cold starts (slower first request after idle time)"}),"\n",(0,s.jsx)(n.li,{children:"Limited execution time and memory"}),"\n",(0,s.jsx)(n.li,{children:"Can be hard to test locally"}),"\n",(0,s.jsx)(n.li,{children:"Not great for complex, long-running processes"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use this when:"})," You want to build lightweight APIs, automation scripts, or backend services without managing infrastructure."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var i=r(6540);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);