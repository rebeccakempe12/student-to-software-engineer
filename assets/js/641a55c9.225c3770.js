"use strict";(self.webpackChunkstudent_to_software_engineer=self.webpackChunkstudent_to_software_engineer||[]).push([[4865],{8439:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"technical-skill-roadmap/essential-application-development/unit-tests","title":"5.2.5. Unit Tests","description":"When you\u2019re just getting started with programming, testing your code usually means running it and checking if the output looks right. But as your projects get bigger and more complex, that approach doesn\u2019t scale.","source":"@site/docs/5-technical-skill-roadmap/2-essential-application-development/5-unit-tests.md","sourceDirName":"5-technical-skill-roadmap/2-essential-application-development","slug":"/technical-skill-roadmap/essential-application-development/unit-tests","permalink":"/docs/technical-skill-roadmap/essential-application-development/unit-tests","draft":false,"unlisted":false,"editUrl":"https://github.com/student-to-software-engineer/student-to-software-engineer/edit/master/docs/5-technical-skill-roadmap/2-essential-application-development/5-unit-tests.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"5.2.4. Deployment with PaaS","permalink":"/docs/technical-skill-roadmap/essential-application-development/deployment-with-paas"},"next":{"title":"5.2.6. SOLID Principles","permalink":"/docs/technical-skill-roadmap/essential-application-development/solid-principals"}}');var i=s(4848),o=s(8453);const r={},l="5.2.5. Unit Tests",a={},c=[{value:"What Is a Unit Test?",id:"what-is-a-unit-test",level:2},{value:"Why Unit Tests Matter",id:"why-unit-tests-matter",level:2},{value:"When Should You Write Them?",id:"when-should-you-write-them",level:2},{value:"What Tools should You Use?",id:"what-tools-should-you-use",level:2},{value:"What Makes a Good Unit Test?",id:"what-makes-a-good-unit-test",level:2}];function h(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"525-unit-tests",children:"5.2.5. Unit Tests"})}),"\n",(0,i.jsx)(t.p,{children:"When you\u2019re just getting started with programming, testing your code usually means running it and checking if the output looks right. But as your projects get bigger and more complex, that approach doesn\u2019t scale."}),"\n",(0,i.jsxs)(t.p,{children:["That\u2019s where ",(0,i.jsx)(t.strong,{children:"unit tests"})," come in."]}),"\n",(0,i.jsx)(t.p,{children:"Unit tests are small, automated tests that check whether a specific part of your code (usually a single function or class) behaves as expected. They help you catch bugs early, prevent future changes from breaking old code, and give you confidence to refactor without fear."}),"\n",(0,i.jsx)(t.h2,{id:"what-is-a-unit-test",children:"What Is a Unit Test?"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.strong,{children:"unit test"})," is a piece of code that:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Sets up a specific input"}),"\n",(0,i.jsx)(t.li,{children:"Calls a function or method"}),"\n",(0,i.jsx)(t.li,{children:"Checks whether the output is what you expect"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Here\u2019s a simple example in Python:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def add(a, b):\n    return a + b\n\ndef test_add():\n    assert add(2, 3) == 5\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If ",(0,i.jsx)(t.code,{children:"add(2, 3)"})," returns anything other than 5, the test fails."]}),"\n",(0,i.jsx)(t.h2,{id:"why-unit-tests-matter",children:"Why Unit Tests Matter"}),"\n",(0,i.jsx)(t.p,{children:"Even though they might feel like extra work at first, unit tests:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Save time in the long run"})," by catching bugs before they cause bigger issues"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Make code safer to change"})," because you\u2019ll know immediately if you broke something"]}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"Document how code is supposed to work"})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Help teams work together"})," without stepping on each other\u2019s toes"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Professional developers write tests for almost everything they build\u2014especially core logic that can\u2019t afford to break."}),"\n",(0,i.jsx)(t.h2,{id:"when-should-you-write-them",children:"When Should You Write Them?"}),"\n",(0,i.jsxs)(t.p,{children:["As a student or beginner, you don\u2019t need to test ",(0,i.jsx)(t.em,{children:"everything"}),". But it\u2019s good to start writing unit tests for:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Pure functions with clear inputs and outputs"}),"\n",(0,i.jsx)(t.li,{children:"Core logic that everything else depends on"}),"\n",(0,i.jsx)(t.li,{children:"Edge cases that could cause bugs (e.g. dividing by zero, empty inputs)"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Just start somewhere. Even one or two tests can make a big difference."}),"\n",(0,i.jsx)(t.h2,{id:"what-tools-should-you-use",children:"What Tools should You Use?"}),"\n",(0,i.jsx)(t.p,{children:"Most languages have built-in or popular third-party testing libraries. Some examples:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Python"})," \u2013 ",(0,i.jsx)(t.code,{children:"pytest"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"JavaScript/TypeScript"})," \u2013 ",(0,i.jsx)(t.code,{children:"Jest"}),", ",(0,i.jsx)(t.code,{children:"Mocha"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Java"})," \u2013 ",(0,i.jsx)(t.code,{children:"JUnit"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"C#"})," \u2013 ",(0,i.jsx)(t.code,{children:"xUnit"}),", ",(0,i.jsx)(t.code,{children:"NUnit"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"These tools provide ways to write tests, run them, and see which ones pass or fail."}),"\n",(0,i.jsx)(t.h2,{id:"what-makes-a-good-unit-test",children:"What Makes a Good Unit Test?"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Clear and focused"})," \u2013 Each test should check one specific thing."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Repeatable"})," \u2013 Tests should always give the same result every time."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Fast"})," \u2013 Good unit tests run in milliseconds, so you can run them constantly."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Descriptive"})," \u2013 A test that fails should make it obvious what went wrong."]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(6540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);