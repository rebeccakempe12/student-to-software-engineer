"use strict";(self.webpackChunkstudent_to_software_engineer=self.webpackChunkstudent_to_software_engineer||[]).push([[803],{8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},8641:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"understanding-the-tech-industry/engineering-team-structures","title":"4.5. Engineering Team Structures","description":"Every tech company is structured a little differently\u2014but once you\u2019ve seen a few setups, patterns start to emerge.","source":"@site/docs/4-understanding-the-tech-industry/5-engineering-team-structures.md","sourceDirName":"4-understanding-the-tech-industry","slug":"/understanding-the-tech-industry/engineering-team-structures","permalink":"/docs/understanding-the-tech-industry/engineering-team-structures","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/4-understanding-the-tech-industry/5-engineering-team-structures.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"4.4. Seniority Levels Explained","permalink":"/docs/understanding-the-tech-industry/seniority-levels-explained"},"next":{"title":"4.6. The Software Development Lifecycle","permalink":"/docs/understanding-the-tech-industry/software-development-lifecycle"}}');var r=t(4848),i=t(8453);const a={},l="4.5. Engineering Team Structures",o={},c=[{value:"Feature Teams",id:"feature-teams",level:2},{value:"Functional Teams",id:"functional-teams",level:2},{value:"Platform / Infrastructure Teams",id:"platform--infrastructure-teams",level:2},{value:"Product vs. Platform Split",id:"product-vs-platform-split",level:2},{value:"Flat vs. Hierarchical",id:"flat-vs-hierarchical",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"45-engineering-team-structures",children:"4.5. Engineering Team Structures"})}),"\n",(0,r.jsx)(n.p,{children:"Every tech company is structured a little differently\u2014but once you\u2019ve seen a few setups, patterns start to emerge."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NOTE:"})," The structures described here are common, but not universal. Each company may have its own variations and nuances and the semantic I've used here may not match exactly with how your company describes its teams."]}),"\n",(0,r.jsx)(n.p,{children:"Let\u2019s break down how software teams are usually organized, and what each structure means for you."}),"\n",(0,r.jsx)(n.h2,{id:"feature-teams",children:"Feature Teams"}),"\n",(0,r.jsxs)(n.p,{children:["These teams are organized around ",(0,r.jsx)(n.strong,{children:"delivering features"})," to users."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each team owns a slice of the product (e.g. \u201cPayments Team,\u201d \u201cChat Team\u201d)"}),"\n",(0,r.jsx)(n.li,{children:"Includes frontend, backend, PM, designer, and maybe QA all working together"}),"\n",(0,r.jsxs)(n.li,{children:["Team is responsible for ",(0,r.jsx)(n.strong,{children:"building, testing, and maintaining"})," their piece of the app"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Good for:"})," End-to-end ownership, learning how all parts of the stack connect\n",(0,r.jsx)(n.strong,{children:"Challenges:"})," You might have to work in areas you\u2019re unfamiliar with (e.g. frontend and backend)"]}),"\n",(0,r.jsx)(n.h2,{id:"functional-teams",children:"Functional Teams"}),"\n",(0,r.jsxs)(n.p,{children:["Organized by ",(0,r.jsx)(n.strong,{children:"discipline"}),", not by product area."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"There\u2019s a \u201cFrontend Team,\u201d a \u201cBackend Team,\u201d a \u201cData Team,\u201d etc."}),"\n",(0,r.jsx)(n.li,{children:"These teams often collaborate with other functions to deliver features"}),"\n",(0,r.jsx)(n.li,{children:"Leads to deep specialization and shared best practices within disciplines"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Good for:"})," Mentorship within your skill set, consistent tooling\n",(0,r.jsx)(n.strong,{children:"Challenges:"})," Slower delivery\u2014features need coordination across teams"]}),"\n",(0,r.jsx)(n.h2,{id:"platform--infrastructure-teams",children:"Platform / Infrastructure Teams"}),"\n",(0,r.jsxs)(n.p,{children:["Focus on ",(0,r.jsx)(n.strong,{children:"building internal tools"})," and enabling other developers."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Handle CI/CD, observability, deployment pipelines, shared services"}),"\n",(0,r.jsx)(n.li,{children:"Rarely user-facing\u2014success is measured by how well they support product teams"}),"\n",(0,r.jsx)(n.li,{children:"Work with tools like Docker, Kubernetes, AWS, Terraform, etc."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Good for:"})," Deep systems knowledge, scaling, automation\n",(0,r.jsx)(n.strong,{children:"Challenges:"})," Less visibility, sometimes seen as \u201csupport\u201d roles"]}),"\n",(0,r.jsx)(n.h2,{id:"product-vs-platform-split",children:"Product vs. Platform Split"}),"\n",(0,r.jsxs)(n.p,{children:["At medium-to-large companies, teams are often divided into ",(0,r.jsx)(n.strong,{children:"product"})," and ",(0,r.jsx)(n.strong,{children:"platform"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Product teams"}),": Own features the user directly interacts with"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform teams"}),": Build shared infrastructure and services used by other teams"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This model allows product teams to move fast, while platform teams maintain consistency and scalability."}),"\n",(0,r.jsx)(n.h2,{id:"flat-vs-hierarchical",children:"Flat vs. Hierarchical"}),"\n",(0,r.jsxs)(n.p,{children:["Some teams are ",(0,r.jsx)(n.strong,{children:"flat"}),"\u2014everyone is an engineer with equal say. Others are ",(0,r.jsx)(n.strong,{children:"hierarchical"}),", with senior engineers or tech leads making the final call."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Flat: more autonomy, more collaboration"}),"\n",(0,r.jsx)(n.li,{children:"Hierarchical: more clarity, easier delegation"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The right balance depends on team size, experience level, and culture."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);